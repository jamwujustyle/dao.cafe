# Default server block to catch all non-matching hosts
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    # Basic SSL config for the default server
    ssl_certificate /etc/nginx/ssl/certificate.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key;
    
    # Return 444 (connection closed without response)
    return 444;
}

server {
    listen 80;
    server_name api.dao.cafe;
    
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name api.dao.cafe;
    
    # Deny illegal Host headers
    if ($host !~* ^(api\.dao\.cafe|www\.api\.dao\.cafe)$) {
        return 444;
    }
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/certificate.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # OCSP Stapling (disabled)
    ssl_stapling off;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; connect-src 'self'; frame-ancestors 'none'; form-action 'self'; upgrade-insecure-requests;" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Block API documentation in production - MUST be before the /api/ location
    location ~ ^/api/(docs|schema|swagger|redoc) {
        return 404 "Not Found";
        add_header Content-Type text/plain;
    }
    
    # API endpoints
    location /api/ {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }
    
    # Static files
    location /static/ {
        alias /var/www/static/;
        try_files $uri $uri/ =404;
    }
    
    # Media files
    location /media/ {
        alias /var/www/media/;
        try_files $uri $uri/ =404;
    }
    
    # Root path - with fallback to Django
    location = / {
        root /var/www/static;
        try_files /api_index.html /index.html @django;
    }
    
    # Admin panel - both with and without trailing slash
    location ~ ^/management-console-secure(/?)$ {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }
    
    # Fallback to Django
    location @django {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Catch-all for any other URLs
    location / {
        try_files $uri @django;
    }
}
