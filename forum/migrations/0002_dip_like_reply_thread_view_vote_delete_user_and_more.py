# Generated by Django 5.0.12 on 2025-02-15 10:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('dao', '0002_dao_contract_stake_delete_user_and_more'),
        ('forum', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='no title', max_length=200)),
                ('content', models.JSONField(default=dict, help_text='Stores Lexical editor JSON content structure')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('replies_count', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('executed', 'Executed'), ('failedFailed', 'Failed')], default='draft', max_length=20)),
                ('end_time', models.BigIntegerField(null=True)),
                ('proposal_id', models.IntegerField(blank=True, null=True)),
                ('proposal_type', models.CharField(choices=[('0', 'Transfer')], default='0', max_length=20)),
                ('proposal_data', models.JSONField(blank=True, help_text='store socials and whitepaper as a json object', null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dao.dao')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.JSONField(help_text='Stores Lexical editor JSON content structure')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='no title', max_length=200)),
                ('content', models.JSONField(default=dict, help_text='Stores Lexical editor JSON content structure')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('replies_count', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dao.dao')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support', models.BooleanField()),
                ('voting_power', models.IntegerField(default=0)),
                ('dip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='forum.dip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.AddIndex(
            model_name='dip',
            index=models.Index(fields=['dao', 'status', 'proposal_id', 'created_at'], name='forum_dip_dao_id_9803f1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dip',
            unique_together={('proposal_id', 'dao')},
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['content_type', 'object_id'], name='forum_like_content_e314b4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'content_type', 'object_id')},
        ),
        migrations.AddIndex(
            model_name='reply',
            index=models.Index(fields=['content_type', 'object_id'], name='forum_reply_content_2efb0f_idx'),
        ),
        migrations.AddIndex(
            model_name='view',
            index=models.Index(fields=['content_type', 'object_id'], name='forum_view_content_86e5cf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='view',
            unique_together={('user', 'content_type', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together={('dip', 'user')},
        ),
    ]
